#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/*
&trackball {
    automouse-layer = <4>;
    scroll-layers = <5>;

    // arrows {
    //     layers = <3>;
    //     bindings =
    //         <&kp RIGHT_ARROW>,
    //         <&kp LEFT_ARROW>,
    //         <&kp UP_ARROW>,
    //         <&kp DOWN_ARROW>;

    //     tick = <10>;
    //     wait-ms = <5>;
    //     tap-ms = <5>;
    // };
};
*/

/ {
    /*
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };
    */

    combos {
        compatible = "zmk,combos";

        dkfsljkd {
            bindings = <&kp U>;
            key-positions = <2 1>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp LEFT_SHIFT  &kp A      &kp B  &kp BACKSPACE
&kp SPACE       &to 8      &kp D  &to 1
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        BLUE_TOOTH {
            bindings = <
&bt BT_CLR  &bt BT_CLR_ALL      &bt BT_SEL 0  &bt BT_SEL 1
&to 0       &to 0               &kp J         &to 2
            >;

            sensor-bindings = <&inc_dec_kp LC(LA(TAB)) LA(LC(LS(TAB)))>;
        };

        layer_2 {
            bindings = <
&kp INT_MUHENKAN  &trans      &trans  &kp ENTER
&to 0             &to 1       &trans  &to 3
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        layer_3 {
            bindings = <
&trans  &trans      &trans  &trans
&to 0   &to 2       &trans  &to 4
            >;

            sensor-bindings = <&inc_dec_kp A B>;
        };

        layer_4 {
            bindings = <
&trans  &trans      &trans  &trans
&to 0   &to 3       &trans  &to 5
            >;

            sensor-bindings = <&inc_dec_kp C D>;
        };

        layer_5 {
            bindings = <
&trans  &trans      &trans  &trans
&to 0   &to 4       &trans  &to 6
            >;

            sensor-bindings = <&inc_dec_kp E F>;
        };

        layer_6 {
            bindings = <
&trans  &trans      &trans  &trans
&to 0   &to 5       &trans  &to 7
            >;

            sensor-bindings = <&inc_dec_kp G H>;
        };

        layer_7 {
            bindings = <
&trans  &trans      &trans  &trans
&to 0   &to 6       &trans  &to 8
            >;

            sensor-bindings = <&inc_dec_kp I J>;
        };

        layer_8 {
            bindings = <
&trans  &trans      &trans  &trans
&to 0   &to 7       &trans  &to 0
            >;

            sensor-bindings = <&inc_dec_kp X Y>;
        };

        /*

        NUM {
            bindings = < ... >;
        };

        ARROW {
            bindings = < ... >;
        };

        MOUSE {
            bindings = < ... >;
        };

        SCROLL {
            bindings = < ... >;
        };

        layer_6 {
            bindings = < ... >;
        };
        */
    };
};
